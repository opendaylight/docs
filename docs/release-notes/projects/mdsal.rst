===============================================
Model-Driven Service Abstraction Layer (MD-SAL)
===============================================

Overview
========

MD-SAL provides infrastructure for binding YANG models to Java object model and infrastructure
for providing YANG-defined interaction patterns:
* Reactive datastore update
* RPC and Action invocation
* Notification sourcing and delivery

Behavior/Feature Changes
========================
The Binding mapping of ``leaf-list`` YANG statement has been updated to correctly take into account
the ``ordered-by`` statement. The default, ``ordered-by system``, leaf-lists are now presented
as ``java.util.Set``. This matches their semantics in terms of ``hashCode()`` and ``equals()`` methods.
The mapping to ``java.util.List`` is maintained for ``ordered-by user`` leaf-lists.

The Binding mapping of ``type decimal64`` has been updated to use ``org.opendaylight.yangtools.yang.common.Decimal64``
instead of ``java.math.BigDecimal``. This offers an exact match in value semantics, which were not
previously correctly enforced.

The ``InstanceIdentifier`` class has been updated to reject attempts to form invalid identifiers, such
as using a ``Notification`` class as a path argument.

Builder classes generated by the Binding code generator no longer implement
``org.opendaylight.yangtools.concepts.Builder``. While this removes the ability to treat their ``build()``
methods in micro-frameworks, it also improves call site visibility, leading to better experience when
refactoring code.

The ``iana-if-type.yang`` model has been updated to revision 2021-06-21.

The ``iana-routing-types.yang`` model has been updated to revision 2021-10-19.

New Features
============
No new features.

Deprecated Features
===================
No deprecated features.

Removed Features
===================
The model for RFC7223 version of ``ietf-interfaces.yang`` has been removed. This model has been
obsoleted by the RFC8343 version.

The model for RFC7277 version of ``ietf-ip.yang`` has been removed. This model has been superseded
by the RFC8344 version.

The model for RFC7895 version of ``ietf-yang-library.yang`` and the corresponding support code has been
removed. This model has been superseded by the RFC8525 version, which provides sufficient compatibility
for OpenDaylight scenarios.

``AssertDataObjects`` utilities have been removed, as they depend on Xtend and a dormant upstream and
are not used anywhere in OpenDaylight.

The unused ``unified-html-generator`` code generation plugin has been removed. It has never been
productized or used in default configuration.

Resolved Issues
===============
The following table lists the issues resolved in this release.

.. jira_fixed_issues::
   :project: MDSAL
   :versions: 9.0.0-9.0.2

Known Issues
============
The following table lists the known issues that exist in this release.

.. jira_known_issues::
   :project: MDSAL
   :versions: 9.0.0-9.0.2

Resolved Issues in SR1
======================
The following table lists the issues resolved in Service Release 1.

.. jira_fixed_issues::
   :project: MDSAL
   :versions: 9.0.3-9.0.4

Known Issues in SR1
===================
The following table lists the known issues that exist in Service Release 1.

.. jira_known_issues::
   :project: MDSAL
   :versions: 9.0.3-9.0.4

Resolved Issues in SR2
======================
The following table lists the issues resolved in Service Release 2.

.. jira_fixed_issues::
   :project: MDSAL
   :versions: 9.0.5-9.0.5

Known Issues in SR2
===================
The following table lists the known issues that exist in Service Release 2.

.. jira_known_issues::
   :project: MDSAL
   :versions: 9.0.5-9.0.5

Resolved Issues in SR3
======================
The following table lists the issues resolved in Service Release 3.

.. jira_fixed_issues::
   :project: MDSAL
   :versions: 9.0.6-9.0.6

Known Issues in SR3
===================
The following table lists the known issues that exist in Service Release 3.

.. jira_known_issues::
   :project: MDSAL
   :versions: 9.0.6-9.0.6
