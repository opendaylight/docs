********************
Simultaneous Release
********************

This page explains how the OpenDaylight release process works once the TSC has
approved a release.

Preparations
============

After release candidate is built gpg sign artifacts using odlsign-bulk script in
**releng/builder/scripts**.

    .. code-block:: bash

        cd scripts/
        ./odlsign-bulk <staging-repo-id>  # eg. autorelease-1367

Releasing OpenDaylight
======================

- Block submit permissions for registered users and elevate RE's committer rights on gerrit.

    .. figure:: images/gerrit-update-committer-rights.png

    .. note::
       Replace <release-name> and <build-no> with current release and build number.
       ex: carbon, boron, beryllium-sr4 for <release-name> or Carbon, Boron, Beryllium-SR4 for <Release-name>

- Nexus: click release for staging repo **(Helpdesk)**
- Nexus: click release for gpgsign repo (created above in Preparations) **(Helpdesk)**
- Send email to Helpdesk with binary URL to update website **(Helpdesk)**
- Send email to TSC and Release mailing lists announcing release binaries location **(Release Engineering Team)**
- Checkout autorelease and switch to release branch eg stable/carbon **(Release Engineering Team)**

    .. code-block:: bash

        git checkout -b stable/<release> origin/stable/<release-name>
        git submodule init
        git submodule update
        git submodule foreach 'git checkout -b stable/<release-name> origin/stable/<release-name> || true'


- Make sure your git repo is setup to push (use git-review)

    .. code-block:: bash

        git submodule foreach 'git review -s'

- Download patches (*.bundle files and taglist.log.gz) from log server.

    .. code-block:: bash

        mkdir /tmp/patches && cd /tmp/patches
        wget https://logs.opendaylight.org/releng/jenkins092/autorelease-release-<release>/<build-no>/archives/all-bundles.tar.gz
        gunzip all-bundles.tar.gz
        wget https://logs.opendaylight.org/releng/jenkins092/autorelease-release-<release>/<build-no>/archives/patches/taglist.log.gz
        gunzip taglist.log.gz

- Run the following commands for every project in the release, to apply patches to each project directory.

    .. code-block:: bash

        ../scripts/patch-odl-release.sh /tmp/patches <Release-Name>
        git review -y -t <Release-name>
        git push gerrit release/<release-name>

- Merge all patches on gerrit in the order generated by merge-order.log

- Tag autorelease too

    .. code-block:: bash

        git checkout `cat /tmp/patches/taglist.log | grep autorelease | awk '{print $2}'`
        git submodule foreach git checkout release/<release-name>
        git commit -a -s -S -m "Release <Release-name>"
        git tag -asm "OpenDaylight <Release-name> release" release/<release-name>
        git push gerrit release/<release-name>

- Re-enable submit permissions for registered users and disable elevated RE committer rights on gerrit.

- Generate release notes (???)

- Send email to release/tsc/dev notifying tagging and version bump complete **(Release Engineering Team)**
