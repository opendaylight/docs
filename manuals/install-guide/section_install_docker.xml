<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section [
 <!-- Some useful entities borrowed from HTML -->
<!ENTITY ndash  "&#x2013;">
<!ENTITY mdash  "&#x2014;">
<!ENTITY hellip "&#x2026;">
]>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="installing_from_docker">
    <title>Installing using Docker Image</title>
    <section xml:id="installing_from_docker_what_is_docker">
        <title>What is Docker</title>
        <para>Docker, provided by <link xlink:href="https://www.docker.io/">docker.io</link>, and
            available in most Linux distributions as well as available on MacOS and Windows, is an
            open-source project to easily create lightweight, portable, self-sufficient containers
            from any application. The same container that a developer builds and tests on a laptop
            can run at scale, in production, on VMs, bare metal, OpenStack clusters, public clouds
            and more.</para>
        <para><emphasis role="italic">For more information on docker please read <link
                    xlink:href="https://www.docker.io/">docker.io's
            documentation</link>.</emphasis></para>
    </section>
    <section xml:id="installing_from_docker_sudo_and_docker_group">
        <title>The sudo command and the docker Group</title>
        <para>(reprinted from <link xlink:href="http://docs.docker.io/en/latest/use/basics/"
                >docker.io's basic documentation</link>):</para>
        <para>The docker daemon always runs as the root user, and since Docker version 0.5.2, the
            docker daemon binds to a Unix socket instead of a TCP port. By default that Unix socket
            is owned by the user root, and so, by default, you can access it with sudo.</para>
        <para>Starting in version 0.5.3, if you (or your Docker installer) create a Unix group
            called docker and add users to it, then the docker daemon will make the ownership of the
            Unix socket read/writable by the docker group when the daemon starts. The docker daemon
            must always run as the root user, but if you run the docker client as a user in the
            docker group then you don't need to add sudo to all the client commands.</para>
    </section>
    <section xml:id="installing_from_docker_docker_images">
        <title>OpenDaylight Docker Images</title>
        <para>There are public images available via the public docker repository. You can find the
            images by issuing a docker search command looking for 'opendaylight' i.e.</para>
        <para>
            <screen><prompt>$</prompt><userinput>docker search opendaylight</userinput>
<computeroutput>Found 3 results matching your query ("opendaylight")
   NAME                                     DESCRIPTION
   opendaylight/base-edition                The base OpenDaylight SDN controlelr
   opendaylight/serviceprovider-edition     The service provider version of the OpenDaylight SDN controller
   opendaylight/virtualization-edition      The virtualization version of the OpenDaylight SDN controller</computeroutput></screen>
        </para>
        <para>Each of these images have version tags that allow the specification of the version via
            the version name. ` is also a support tag to identify the latest official release. For
            the first release of OpenDaylight, the version tag is hydrogen.</para>
    </section>
    <section xml:id="installing_from_docker_using_docker_image">
        <title>Using the Image</title>
        <para>The OpenDaylight docker image is meant to be used to start an instance of the
            OpenDaylight SDN controller and that process will be invoked when the docker image is
            run. Any command line options you append to the docker run command will be passed on to
            the the OpenDaylight run.sh startup script. In its simplest form you can invoke an
            instance of the Opendaylight controller using the command: </para>
        <para>
            <screen><prompt>$</prompt><userinput>docker run -d &lt;image-identifier></userinput></screen>
        </para>
        <para>Where &lt;image-identifier> can be one of the pre-build image references, i.e.
            opendaylight/base-edition. Additional information and options for 'running' a docker
            image can be found at <link
                xlink:href="http://docs.docker.io/en/latest/commandline/cli/#run">docker.io's run
                documentation</link>.</para>
        <section xml:id="installing_from_docker_ports_exposed">
            <title>Ports</title>
            <para>The OpenDaylight controller image will expose the following ports from the
                container to the host system:</para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>1088 - JMX access</para>
                    </listitem>
                    <listitem>
                        <para>1830 - Netconf use</para>
                    </listitem>
                    <listitem>
                        <para>2400 - OSGi console</para>
                    </listitem>
                    <listitem>
                        <para>4342 - Lisp Flow Mapping (for Service Provider Edition only)</para>
                    </listitem>
                    <listitem>
                        <para>5666 - ODL Internal clustering RPC</para>
                    </listitem>
                    <listitem>
                        <para>6633 - OpenFlow use</para>
                    </listitem>
                    <listitem>
                        <para>6653 - OpenFlow use</para>
                    </listitem>
                    <listitem>
                        <para>7800 - ODL Clustering</para>
                    </listitem>
                    <listitem>
                        <para>8000 - Java debug access</para>
                    </listitem>
                    <listitem>
                        <para>8080 - OpenDaylight web portal</para>
                    </listitem>
                    <listitem>
                        <para>8383 - Netconf use</para>
                    </listitem>
                    <listitem>
                        <para>12001 - ODL Clustering</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>By default these ports not will be mapped to ports on the host system (i.e. the
                system on which the docker  <emphasis role="italic">run</emphasis>  command is
                invoked). To understand how to enable docker container instances to communicate
                without having to 'hard wire' the port information see <emphasis role="italic"><link
                        xlink:href="http://docs.docker.io/en/latest/use/working_with_links_names/"
                        >docker.io's documentation</link> on linking.</emphasis></para>
            <para>If you wish to map these ports to specific port numbers on the host system, this
                can be accomplished as command line options to the docker run command using the
                'port map' option specified using the <emphasis role="italic">-p</emphasis> option.
                The syntax for this option is documented in <link
                    xlink:href="http://docs.docker.io/en/latest/commandline/cli/#run"><emphasis
                        role="italic">docker.io's run documentation</emphasis></link>, but is
                essentially <emphasis role="italic">-p
                    &lt;host-port>:&lt;container-port>.</emphasis></para>
        </section>
    </section>
    <section xml:id="installing_from_docker_docker_clustering">
        <title>Clustering</title>
        <para>OpenDaylight supports the concept of <link
                xlink:href="https://wiki.opendaylight.org/view/OpenDaylight_Controller:Programmer_Guide:Clustering"
                >clustering</link> using a command line option <link
                xlink:href="https://wiki.opendaylight.org/view/OpenDaylight_Controller:Clustering:HowTo"
                >-Dsupernodes</link> to support high availability.</para>
        <para>The docker images can be used to set up a cluster on a single docker server (host)
            using the <link
                xlink:href="http://blog.docker.io/2013/10/docker-0-6-5-links-container-naming-advanced-port-redirects-host-integration/"
                >docker naming and linking capability</link> along with some modifications that were
            made to the OpenDaylight's processing of the supernodes host specifications.</para>
        <para><emphasis role="italic">NOTE: The cluster configuration setup described in this
                document does not work for containers that are running on separate hosts. Supporting
                clustering using docker images across hosts is an advanced topic that relies on
                setting up virtual networks between the containers and is beyond the scope of this
                introduction.</emphasis></para>
        <para>To support docker based clustering the syntax of the <emphasis role="italic"
                >supernodes</emphasis> parameter has been extended. The important changes
            are:</para>
        <para>
            <itemizedlist>
                <listitem>
                    <para><emphasis role="italic">+self</emphasis> - interpreted as a reference to
                        the local host's address (not 127.0.0.1) and will be resolved to an IP
                        address through the environment variable <emphasis role="italic"
                            >HOSTNAME</emphasis>.</para>
                </listitem>
                <listitem>
                    <para><emphasis role="italic">+&lt;name&gt;+</emphasis> - interpreted as a
                        reference to another container, <emphasis role="italic"
                        >&lt;name></emphasis>, and will be resolved using the environment variables
                        defined by docker when the <emphasis role="italic">-link</emphasis> command
                        line option is used</para>
                </listitem>
            </itemizedlist>
        </para>
        <para>It is important to note that these extensions will only be used if OpenDaylight
            determines that it is running inside a <emphasis role="italic">container</emphasis>.
            This is determined by the value of the environment variable ontainer being set to
                <emphasis role="italic">lxc</emphasis>.</para>
        <para>All values not prefixed by a <emphasis role="italic">+</emphasis> will be interpreted
            normally.</para>
        <para>Below is an example of starting up a three node cluster using this syntax:</para>
        <programlisting>   $ docker run -d -name node1 opendaylight/base -Dsupernodes=+self
   a8435cc23e13cb4e04c3c9788789e7e831af61c735d14a33025b3dd6c76e2938
   $ docker run -d -name node2 -link node1:n1 opendaylight/base -Dsupernodes=+self:+n1
   fa0b37dfd216291e36fd645a345751a1a6079123c99d75326a5775dce8414a93
   $ docker run -d -name node3 -link node1:n1 opendaylight/base -Dsupernodes=+self:+n1
   9ad6874aa85cad29736030239baf836f46ceb0c242baf873ab455674040d96b1
</programlisting>
        <para>The cluster can be verified through the OpenDaylight user interface. This can be
            accomplished by first determining the IP address of one of the nodes:</para>
        <programlisting>   $ docker inspect -format='{{.NetworkSettings.IPAddress}}' node1
   172.17.0.46
</programlisting>
        <para>After determining the IP address you can view the web interface by typing <link
                xlink:href="http://172.17.0.46:8080/">http://172.17.0.46:8080</link> in the browser
            address bar, authenticating with the default user name and password (admin/admin), and
            then viewing the cluster information by selecting Cluster from the right hand drop down
            menu. A popup window should be displayed that shows all the nodes in the cluster with
            the master marked with a C and the node to which you are currently connected marked with
            a * (asterisks).</para>
    </section>
</section>
